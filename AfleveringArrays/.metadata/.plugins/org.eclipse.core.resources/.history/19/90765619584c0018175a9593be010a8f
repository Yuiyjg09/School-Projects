package guifx;

import application.model.Deltager;
import application.model.Hotel;
import application.model.Konference;
import application.model.Ledsager;
import application.model.Udflugt;
import application.service.Service;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.control.CheckBox;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.stage.Modality;
import javafx.stage.Stage;
import javafx.stage.StageStyle;

public class TilmeldWindow extends Stage {  
    public TilmeldWindow(String title, Konference konference) {
        this.initStyle(StageStyle.UTILITY);
        this.initModality(Modality.APPLICATION_MODAL);
        this.setResizable(false);
        
        this.setTitle(title);
        GridPane pane = new GridPane();
        this.initContent(pane);
        
        Scene scene = new Scene(pane);
        this.setScene(scene);
    }
    
    public TilmeldWindow(String title) {
        this(title, null);
    }
    
    //----------------------------------------------------------------------
    
    private TextField deltNavn, deltTlf, deltEmail, deltAdr, deltFirma, deltFirmaTlf, deltLandby, ledNavn, ledTlf, ledEmail;
    private CheckBox chkLedsager;
    private Alert alarm;
    private ListView<Udflugt> udflugter, udflugterValgt; 
    private ListView<Hotel> services, servicesValgt;
    
    
    private void initContent(GridPane pane) {
        pane.setPadding(new Insets(10));
        pane.setHgap(10);
        pane.setVgap(10);
        pane.setGridLinesVisible(false);
        
        Label lblDeltNavn = new Label("Navn:");
        pane.add(lblDeltNavn, 0, 0);
        deltNavn = new TextField();
        pane.add(deltNavn, 1, 0);
        deltNavn.setPrefWidth(200);
        
        Label lblDeltTlf = new Label("Tlf.Nr:");
        pane.add(lblDeltTlf, 0, 1);
        deltTlf = new TextField();
        pane.add(deltTlf, 1, 1);
        deltTlf.setPrefWidth(200);
        
        Label lblDeltEmail = new Label("E-Mail:");
        pane.add(lblDeltEmail, 0, 2);
        deltEmail = new TextField();
        pane.add(deltEmail, 1, 2);
        deltEmail.setPrefWidth(200);
        
        Label lblDeltAdr = new Label("Adresse:");
        pane.add(lblDeltAdr, 0, 3);
        deltAdr = new TextField();
        pane.add(deltAdr, 1, 3);
        deltAdr.setPrefWidth(200);
        
        Label lblDeltFirma = new Label("Firmanavn:");
        pane.add(lblDeltFirma, 0, 4);
        deltFirma = new TextField();
        pane.add(deltFirma, 1, 4);
        deltFirma.setPrefWidth(200);
        
        Label lblDeltFirmaTlf = new Label("Firma Tlf.Nr:");
        pane.add(lblDeltFirmaTlf, 0, 5);
        deltFirmaTlf = new TextField();
        pane.add(deltFirmaTlf, 1, 5);
        deltFirmaTlf.setPrefWidth(200);
        
        Label lblDeltLandby = new Label("By - Land:");
        pane.add(lblDeltLandby, 0, 6);
        deltLandby = new TextField();
        pane.add(deltLandby, 1, 6);
        deltLandby.setPrefWidth(200);
        
        chkLedsager = new CheckBox("Ledsager:");
        pane.add(chkLedsager, 0, 8);
        
        Label lblLedNavn = new Label("Navn:");
        pane.add(lblLedNavn, 0, 9);
        ledNavn = new TextField();
        pane.add(ledNavn, 1, 9);
        ledNavn.setPrefWidth(200);
        
        Label lblLedTlf = new Label("Tlf.Nr:");
        pane.add(lblLedTlf, 0, 10);
        ledTlf = new TextField();
        pane.add(ledTlf, 1, 10);
        ledNavn.setPrefWidth(200);
        
        Label lblLedEmail = new Label("E-Mail:");
        pane.add(lblLedEmail, 0, 11);
        ledEmail = new TextField();
        pane.add(ledEmail, 1, 11);
        ledEmail.setPrefWidth(200);
        
        Label lblUdflugter = new Label("Udflugter:");
        pane.add(lblUdflugter, 2, 0);
        udflugter = new ListView<>();
        pane.add(udflugter, 2, 1, 1, 4);
        udflugter.setPrefHeight(200);
        udflugter.setPrefWidth(200);
        // Add udflugter
        
        Label lblUdflugterValgt = new Label("Udflugter Valgt:");
        pane.add(lblUdflugterValgt, 3, 0);
        udflugterValgt = new ListView<>();
        pane.add(udflugterValgt, 3, 1, 1, 4);
        udflugterValgt.setPrefHeight(200);
        udflugterValgt.setPrefWidth(200);
        // Udflugter fra liste af udflugter
        
        Button btnAddU = new Button("Tilføj");
        pane.add(btnAddU, 2, 5);
        btnAddU.setOnAction(event -> this.addUAction());
        
        //Listerner til selected udflugt
        
        Button btnRemoveU = new Button("Fjern");
        pane.add(btnRemoveU, 3, 5);
        btnRemoveU.setOnAction(event -> this.removeUAction());
        
        //Listener til at flytte tilbage til udflugter
        
        Label lblServices = new Label("Services:");
        pane.add(lblServices, 2, 6);
        services = new ListView<>();
        pane.add(services, 2, 7, 1, 4);
        services.setPrefHeight(200);
        services.setPrefWidth(200);
        // Add services
        
        Label lblServicesValgt = new Label("Services Valgt: ");
        pane.add(lblServicesValgt, 3, 6);
        servicesValgt = new ListView<>();
        pane.add(servicesValgt, 3, 7, 1, 4);
        servicesValgt.setPrefHeight(200);
        servicesValgt.setPrefWidth(200);
        // Services fra liste af services
        
        Button btnAddS = new Button("Tilføj");
        pane.add(btnAddS, 2, 11);
        btnAddS.setOnAction(event -> this.addSAction());
        //Listener til at flytte til valgte services
        
        Button btnRemoveS = new Button("Fjern");
        pane.add(btnRemoveS, 3, 11);
        btnRemoveS.setOnAction(event -> this.removeSAction());
        // Listener til at flytte tilbage til services
        
        
        Button btnTilmeld = new Button("Tilmeld");
        pane.add(btnTilmeld, 1, 12);
        btnTilmeld.setOnAction(event -> this.tilmeldAction());
        
        Button btnAfbryd = new Button("Afbryd");
        pane.add(btnAfbryd, 0, 12);
        btnAfbryd.setOnAction(event -> this.afbrydAction());
        
        ledNavn.setDisable(true);
        ledEmail.setDisable(true);
        ledTlf.setDisable(true);
        chkLedsager.setOnAction(event -> this.checker());
        
        
    }
    
    
    //---------------------------------------------------------------------
    
    private void checker() {
    	if(chkLedsager.isSelected()) {
    		ledNavn.setDisable(false);
    		ledTlf.setDisable(false);
    		ledEmail.setDisable(false);
    	} else {
    		ledNavn.setDisable(true);
    		ledTlf.setDisable(true);
    		ledEmail.setDisable(true);
    	}
    }
    
    private void addUAction() {
        // Action til at adde til valgte udflugter
    }
    
    private void removeUAction() {
        //Action til at adde tilbage til listen af udflugter
    }
    
    private void addSAction() {
        //Action til at adde til valgte services
    }
    
    private void removeSAction() {
        //Action til at adde tilbage til listen af services
    }
    
    private void afbrydAction() {
        this.hide();
    }
    
    private void tilmeldAction() {
        String dNavn = deltNavn.getText().trim();
        String dTlf = deltTlf.getText().trim();
        String dEmail = deltEmail.getText().trim();
        String dAdr = deltAdr.getText().trim();
        String dFirma = deltFirma.getText().trim();
        String dFirmaTlf = deltFirmaTlf.getText().trim();
        String dLandby = deltLandby.getText().trim();
        String lNavn = ledNavn.getText().trim();
        String lTlf = ledTlf.getText().trim();
        String lEmail = ledEmail.getText().trim();
        
        if (dNavn.length() == 0 || dTlf.length() == 0 || dEmail.length() == 0 || dAdr.length() == 0 || dFirma.length() == 0 || dFirmaTlf.length() == 0 || dLandby.length() == 0) {
            alarm = new Alert(AlertType.ERROR);
            alarm.setTitle("FEJL");
            alarm.setHeaderText("Information mangler");
            alarm.setContentText("Venligst udfyld alle de nødvendige felter");
            alarm.showAndWait();
        } else {
            if (chkLedsager.isSelected() == false) {
                Service.createDeltager(dNavn, dTlf, dEmail, dAdr, dFirma, dFirmaTlf, dLandby);
            } else {
                if (chkLedsager.isSelected() && (lNavn.length() == 0 || lTlf.length() == 0 || lEmail.length() == 0)) {
                    alarm = new Alert(AlertType.ERROR);
                    alarm.setTitle("FEJL");
                    alarm.setHeaderText("Information mangler");
                    alarm.setContentText("Venligst udfyld alle de nødvendige felter");
                    alarm.showAndWait();
                } else {
                   Deltager deltager = Service.createDeltager(dNavn, dTlf, dEmail, dAdr, dFirma, dFirmaTlf, dLandby);
                   Ledsager ledsager = Service.createLedsager(deltager, lNavn, lTlf, lEmail);
                   deltager.setLedsager(ledsager);
                }
            }
        }
        
        this.hide();
    }

}
