package guifx;

import application.model.*;
import application.service.Service;
import javafx.beans.value.ChangeListener;
import javafx.geometry.Insets;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import storage.Storage;


public class AdminPane extends GridPane {
	private ListView<Bil> lvwBiler, lvwVaerk;
	private ListView<BilKatagori> lvwKatagorier;
	private TextArea kunder;
	
	public AdminPane() {
		this.setPadding(new Insets(20));
        this.setHgap(20);
        this.setVgap(10);
        this.setGridLinesVisible(false);
        
        Label lblBiler = new Label("Biler:");
        this.add(lblBiler, 0, 0);
        
        lvwBiler = new ListView<>();
        this.add(lvwBiler, 0, 1, 1, 3);
        lvwBiler.setPrefHeight(200);
        lvwBiler.setPrefWidth(200);
        lvwBiler.getItems().setAll(Service.getBiler());
        
        ChangeListener<Bil> listener = (ov, oldBil, newBil) -> this.selectedCarChanged();
        lvwBiler.getSelectionModel().selectedItemProperty().addListener(listener);
        
        Label lblVaerk = new Label("På Værksted:");
        this.add(lblVaerk, 2, 0);
        
        lvwVaerk = new ListView<Bil>();
        this.add(lvwVaerk, 2, 1, 1, 3);
        lvwVaerk.setPrefHeight(200);
        lvwVaerk.setPrefWidth(200);
        
        ChangeListener<Bil> listener2 = (ov, oldBil, newBil) -> this.selectedCarChanged();
        lvwVaerk.getSelectionModel().selectedItemProperty().addListener(listener2);
        
        Label lblKunder = new Label("Kunder:");
        this.add(lblKunder, 0, 5);
        
        kunder = new TextArea();
        this.add(kunder, 0, 6, 1, 3);
        kunder.setPrefHeight(200);
        kunder.setPrefWidth(200);
        kunder.setEditable(false);
        
        Label lblKatagorier = new Label("Bil-Katagorier");
        this.add(lblKatagorier, 2, 5);
        
        lvwKatagorier = new ListView<BilKatagori>();
        this.add(lvwKatagorier, 2, 6, 1, 3);
        lvwKatagorier.setPrefHeight(200);
        lvwKatagorier.setPrefWidth(200);
        lvwKatagorier.getItems().setAll(Service.getKatagorier());
        
        Button btnSkade = new Button("Send På Værksted");
        this.add(btnSkade, 0, 10);
        btnSkade.setOnAction(event -> this.addToVaerksted());
        
        Button btnFix = new Button("Klargør");
        this.add(btnFix, 2, 10);
        btnFix.setOnAction(event -> this.addToFixed());
        
        Button btnSkrot = new Button("Skrot/Sælg Bil");
        this.add(btnSkrot, 3, 10);
        btnSkrot.setOnAction(event -> this.skrotAction());
        
        Button btnNyBil = new Button("Registrer ny Bil");
        this.add(btnNyBil, 0, 11);
        btnNyBil.setOnAction(event -> this.nyBilAction());
        
        Button btnNyKatagori = new Button("Opret ny Katagori");
        this.add(btnNyKatagori, 2, 11);
        btnNyKatagori.setOnAction(event -> this.nyKatagoriAction());
        
        Button btnVisKatagori = new Button("Vis Bil-Katagori:");
        this.add(btnVisKatagori, 3, 11);
        btnVisKatagori.setOnAction(event -> this.visKatagoriAction());
        
	}
	
	private void selectedCarChanged() {}
	
	private void addToVaerksted() {
		if(!lvwBiler.getSelectionModel().getSelectedItem().equals(null)) {
			lvwBiler.getSelectionModel().getSelectedItem().setTilstand(Tilstand.PAAVAERKSTED);
			lvwVaerk.getItems().add(lvwBiler.getSelectionModel().getSelectedItem());
			lvwBiler.getItems().remove(lvwBiler.getSelectionModel().getSelectedItem());
		}
	}
	
	private void addToFixed() {
		if(!lvwVaerk.getSelectionModel().getSelectedItem().equals(null)) {
			lvwVaerk.getSelectionModel().getSelectedItem().setTilstand(Tilstand.KLAR);
			lvwBiler.getItems().add(lvwVaerk.getSelectionModel().getSelectedItem());
			lvwVaerk.getItems().remove(lvwVaerk.getSelectionModel().getSelectedItem());
		}
	}
	
	private void skrotAction() {
		if(!lvwVaerk.getSelectionModel().getSelectedItem().equals(null)) {
			lvwVaerk.getSelectionModel().getSelectedItem().setTilstand(Tilstand.SOLGT);
			lvwVaerk.getItems().remove(lvwVaerk.getSelectionModel().getSelectedItem());
			Storage.removeBil(lvwVaerk.getSelectionModel().getSelectedItem());
		}
	}
	
	private void nyBilAction() {
		BilWindow dia = new BilWindow("Registrer ny Bil");
		dia.showAndWait();
		
		lvwBiler.getItems().setAll(Service.getBiler());
	}
	
	private void nyKatagoriAction() {
		KatagoriPane dia = new KatagoriPane("Opret ny Katagori");
		dia.showAndWait();
		
		lvwKatagorier.getItems().setAll(Service.getKatagorier());
	}
	
	private void visKatagoriAction() {
		if(!lvwKatagorier.getSelectionModel().getSelectedItem().equals(null)) {
		VisKatagoriWindow dia = new VisKatagoriWindow("Katagori: " + lvwKatagorier.getSelectionModel().getSelectedItem().getNavn(), lvwKatagorier.getSelectionModel().getSelectedItem() );
		dia.showAndWait();
		
		}
	}
	
	
	
	public void updateControls() {
		StringBuilder sb = new StringBuilder();
		
		for(Kunde kd : Storage.getKunder()) {
			sb.append(kd + "\n ");
		}
		kunder.setText(sb.toString());
	}
	
}
